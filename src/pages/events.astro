---
import { sanityClient } from "sanity:client";
import { PortableText } from "astro-portabletext";
import { YouTube } from "astro-embed";
import Layout from "../layouts/Layout.astro";
import SanityImage from "../components/SanityImage.astro";

const pastEvents = await sanityClient.fetch(
  `*[
        _type == "event"
        && date < now()
        ]{_id, name, date, eventCopy, image, youtubeEmbeds, headline->, venue->}|order(date desc)`
);
const upcomingEvents = await sanityClient.fetch(
  `*[
        _type == "event"
        && date > now()
        ]{_id, name, date, eventCopy, image, tickets, youtubeEmbeds, headline->, venue->}|order(date desc)`
);

---

<Layout title="events">
  <main>
    <section class="flex text-center flex-col mx-auto items-center pb-16">
      {
        upcomingEvents.length > 0 &&
          upcomingEvents.map((event: any) => {
            return (
              <div class="items-center my-6">
                <SanityImage
                  node={event.image}
                  width="800"
                  classNames="mx-auto mb-16"
                />
                  {event?.tickets && (
                  <a href={event.tickets} aria-label="Ticket Link">
                    <button
                      type="button"
                      class="cta-button mb-16"
                      value="Get Tickets"
                    >
                      Get Tickets
                    </button>
                  </a>
                )}
                <h2 class="font-semibold text-2xl">{event.name}</h2>
                <h2 class="font-semibold text-2xl mb-12 italic">
                  {new Date(event?.date).toLocaleDateString()} @{" "}
                  {event.venue?.name}
                </h2>
                <div class="text-left">
                  <PortableText value={event.eventCopy} />
                </div>
                {event.youtubeEmbeds && event.youtubeEmbeds.map(emb => {
  if (typeof emb !== 'string') {
    console.warn(`Invalid YouTube ID: ${emb}`);
    return null;
  }
  return <YouTube class='w-full mx-auto mt-8' id={emb}/>;
})}
                {event?.tickets && (
                  <a href={event.tickets} aria-label="Ticket Link">
                    <button
                      type="button"
                      class="cta-button mt-16"
                      value="Get Tickets"
                    >
                      Get Tickets
                    </button>
                  </a>
                )}
              
              </div>
            );
          })
      }
      {
        pastEvents.map((event: any) => {
          return (
            <div class="items-center mt-6 mb-12">
        <h1
          class={`font-semibold text-2xl text-skin-accent mb-16 text-center  ${upcomingEvents.length > 0 && "mt-16"}`}
        >
          Past event:
        </h1>
              <SanityImage
                node={event.image}
                width="800"
                classNames="mx-auto mb-16"
              />
              <h2 class="font-semibold text-2xl">{event.name}</h2>
              <h2 class="font-semibold text-2xl mb-12 italic">
                {new Date(event?.date).toLocaleDateString()} @{" "}
                {event.venue.name}
              </h2>
              <div class="text-left">
                <PortableText value={event.eventCopy} />
              </div>
              {event.youtubeEmbeds && event.youtubeEmbeds.map(emb => {
  if (typeof emb !== 'string') {
    console.warn(`Invalid YouTube ID: ${emb}`);
    return null;
  }
  return <YouTube class='w-full mx-auto mt-8' id={emb}/>;
})}
            </div>
          );
        })
      }

    </section>

    <!-- </div> -->
  </main>
</Layout>
